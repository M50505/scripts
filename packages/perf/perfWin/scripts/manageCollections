#!/usr/bin/env bash
# vim:tabstop=2:shiftwidth=2:nu:filetype=sh
#	
# $* - brief-description-here
#
# Author:              Martin Cribbins
#                      BuzzClan LLC
#	
# Revision history:
#
# 2012-02-28    -  
#	
# 
# Description:
#
# full-description-here
_doc $1 20120420131554 "manageCollections manages Windows ETW performance counter collections." && exit 0

optInit
optAdd host string "localhost" "Host on which the colletions will be managed."
optAdd username string "" "Account under which to create and manage collections on the specified host."
optAdd password string "" "Password for the managing account."
optAdd directory string "C:/perfCollection" "The directory in which to store logs. If using a remote host, ensure that this is available at that host before starting collection."
optAdd create boolean false "Create the collections"
optAdd delete boolean false "Delete the collections"
optAdd startCollecting boolean false "Start collecting"
optAdd stopCollecting boolean false "Stop collecting"
optParse $* 
optParseSuccess || exit 1


counter[${#counter[@]}]='\Process(*)\ID Process'
collector[${#collector[@]}]="PID"

counter[${#counter[@]}]='\Process(*)\% Processor Time'
collector[${#collector[@]}]="CPU"

counter[${#counter[@]}]='\Process(*)\Private Bytes'
collector[${#collector[@]}]="PBYTES"

counter[${#counter[@]}]='Processor\% Processor Time'
collector[${#collector[@]}]="PROCESSOR"

collectorConfigFile="collectorconfig"

if [[ "${host}" != "localhost" ]]
then
	remote="psexec -d \\\\${host} "
fi

for ((i=0;i<${#counter[@]};i++))
do
	if ${create}
	then
		echo "Creating ${collector[${i}]}"
		${remote} logman create counter ${collector[${i}]} -f bincirc -max 500 -si 1 -v mmddhhmm -o "${directory}/${collector[${i}]}.blg" -c "${counter[${i}]}"
	elif ${delete}
	then
		echo "Deleting ${collector[${i}]}"
		${remote} logman delete ${collector[${i}]} 
	elif ${startCollecting}
	then
		echo "Starting ${collector[${i}]}"
		${remote} logman start ${collector[${i}]} &
	elif ${stopCollecting}
	then
		echo "Stopping ${collector[${i}]}"
		${remote} logman stop ${collector[${i}]} &
	else
		failWithMessage "You must specify either create, delete, start, or stop"
	fi
done
