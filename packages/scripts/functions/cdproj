#!/usr/bin/env bash
# vim:tabstop=2:shiftwidth=2:nu:filetype=sh
#	
# Author:              Martin Cribbins
# Revision history:
#
# 2025-03-02 - Initial version.
#	
#_doc ${1} 20250302100238 " " && exit 0


cdproj ()
{
	#
	#	Customize to your liking: the locations of the projects root
	# directory and the file containing the name of the previously
	# visited project.
	#
	local projectsRoot="${HOME}/projects"

	local currentProject="${HOME}/.config/cdproj/currentProject"
	local previousProject="${HOME}/.config/cdproj/previousProject"

	local allProjects
	local repoUser

	[[ -f "${currentProject}" ]] || touch "${currentProject}"
	[[ -f "${previousProject}" ]] || touch "${previousProject}"
	
	#
	#	Bail out if the projects root directory does not exist.
	#
	if [[ ! -d ${projectsRoot} ]]
	then
		echo "The projects root directory ${projectsRoot} cannot be located." >&2
		return 1
	fi	

	#
	#	The first argument is "-", so we are looking
	#	to go back to the previous project directory.
	#
	if [[ "${1}" = "-" ]]
	then
	
		#	If this is the first time that "cdproj -" is being used,
		#	then if the directory for the previous project file
		#	does not exist, create it.`

		if [[ ! -d "$(dirname ${previousProject})" ]]
		then

			# Attempt to create the directory, report and
			#	return if that fails. 
			
			if ! mkdir -p $(dirname "${previousProject}")
			then
				echo "Failed to create the $(dirname "${previousProject}") directory." >&2
				return 1
			fi
		fi

		if cdproj "$(<${previousProject})"
		then
			return 0
		else
			return 1
		fi
	fi

	#
	#	This is the beginning of the ordinary flow, attempting to
	#	change directory to the specified project ...
	#
	local dstDir="${projectsRoot}/${1}"

	if [[ ! -d "${dstDir}" ]]
	then
		echo "The project directory ${dstDir} cannot be located." >&2
		return 1
	fi	

	#
	#	Expanding this to attempt to work with projects that are git collections
	#	Return in failure if the neither the specified project, nor any of its subdirectories is a local git repo.
	#
	if [[ "$(find -L ${dstDir} -type d -name .git )" = "" ]]
	then
		cat <<EOF
Neither the project ${dstDir} nor any of its subdirectories is a local
git repository. Proceeding in spite of this.
EOF
 
	fi

	#
	#	Finally, after all of the sanity checks, cd to
	#	the desired project directory and call gitInit
	#	to set the current git remote repository user.
	#
	cd "${dstDir}"

	#
	#	Copy what was the current project name into the
	#	previous project name, and then record this project
	#	name into the current project name file.
	#
	cp "${currentProject}" "${previousProject}" 

	echo "$(basename ${PWD})" > "${currentProject}" 


	#
	#	We may be working with externally supplied repositiories whose
	#	credentials will not match one that we have, or else are not required
	#	to match, or else there are no credentials (no user key in the .git/config file)
	#	specified.
	#	
	#	In these cases echo a warning to STDERR and return success.
	#
	if ! repoUser=$(gitGetRepoUser)
	then
		echo "The git user account cannot be found or is not valid. Proceeding anyway." >&2
		return 0
	fi

	if ! gitInit ${repoUser}
	then
		echo "Could not find credentials for the git service for the specified project" >&2
		return 0
	fi

}
